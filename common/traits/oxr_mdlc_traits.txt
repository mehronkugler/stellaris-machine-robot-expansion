# oxr_mdlc_trait_planned_obsolescence = {
# 	cost = -3
# 	initial = yes
# 	inline_script = trait/sorting/oxr_mdlc_robotic
# 	allowed_archetypes = { MACHINE ROBOT }
# 	species_potential_add = { always = yes }
# 	assembling_modifier = {
# 		planet_pop_assemblers_upkeep_mult = -0.5
# 	}
# 	modifier = {
# 		planet_pop_assembly_mult = 0.25
# 		planet_jobs_produces_mult = -0.1
# 		pop_amenities_usage_mult = 0.25
# 		cohesion_ethics_penalty_mult = 0.2

# 		leader_lifespan_mult = -0.5
# 		leaders_unity_upkeep_mult = -0.5
# 		leaders_unity_cost_mult = -0.5
# 		species_leader_exp_gain = -0.25
# 		negative_leader_traits_species = 3
# 	}
# 	opposites = {
# 		"trait_venerable"
# 		"trait_enduring"
# 		"trait_robot_enhanced_memory"
# 		"trait_robot_durable"
# 		"trait_robot_learning_algorithms"
# 		"trait_robot_custom_made"
# 		"xvcv_mdlc_trait_memory_backup"
# 		"trait_robot_mass_produced"
# 		"trait_robot_immortality"
# 	}
# }

# oxr_mdlc_trait_prefabricated_modules = {
# 	cost = 3
# 	allowed_archetypes = { MACHINE XVCV_MDLC_BIO_ROBOT ROBOT }
# 	initial = yes
# 	randomized = no
# 	improves_leaders = no
# 	species_potential_add = { always = yes }
# 	modifier = {
# 		planet_pop_assemblers_upkeep_mult = -0.4
# 		pop_amenities_usage_mult = 0.1
# 	}
# 	opposites = {
# 		trait_robot_recycled
# 		trait_robot_high_maintenance
# 	}
# }

# oxr_mdlc_trait_fpga = {
# 	cost = 1
# 	allowed_archetypes = { MACHINE ROBOT }
# 	initial = yes
# 	inline_script = trait/sorting/oxr_mdlc_robotic
# 	species_potential_add = { always = yes }
# 	modifier = {
# 		pop_demotion_time_mult = -1
# 		unemployment_resources_upkeep_add = -0.5
# 	}
# }